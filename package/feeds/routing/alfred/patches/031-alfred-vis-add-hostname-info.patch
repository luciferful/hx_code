--- a/vis/vis.c
+++ b/vis/vis.c
@@ -186,6 +186,42 @@ static int get_if_ipv4(char *ifname, uin
 	return 0;
 }
 
+#define HOST_NAME_PATH	"/proc/sys/kernel/hostname"
+static void get_hostname(unsigned char* buf, size_t maxlen)
+{
+	FILE *fp;
+	size_t ret;
+
+	buf[0]='\0';
+
+	fp = fopen(HOST_NAME_PATH, "r");
+	if (!fp)
+	{
+		printf("open file %s error!\n", HOST_NAME_PATH);
+		return;
+	}
+	
+
+	ret = fread(buf, 1, maxlen-1, fp);
+	fclose(fp);
+
+	{
+		int i;
+		for (i = 0; i < ret; i++)
+		{
+			if ((buf[i]=='\r') || buf[i]=='\n')
+			{
+				buf[i]='\0';
+				break;
+			}
+		}
+	}
+
+	buf[ret+1] = '\0';
+
+	return;
+}
+
 static int get_if_index_byname(struct globals *globals, char *ifname)
 {
 	struct iface_list_entry *i_entry;
@@ -774,6 +810,7 @@ static int compile_vis_data(struct globa
 	struct vis_entry *vis_entries;
 	int iface_n = 0, entries_n = 0;
 	uint8_t ipv4[4];
+	uint8_t buf[32];
 
 	if (0 != get_if_ipv4("br-lan", ipv4))
 	{
@@ -781,8 +818,12 @@ static int compile_vis_data(struct globa
 		ipv4[2] = 0;	ipv4[3] = 1;
 	}
 
+	get_hostname(buf, 32);
+
 	list_for_each_entry(i_entry, &globals->iface_list, list) {
-		memcpy(&globals->vis_data->ifaces[iface_n], i_entry->mac, ETH_ALEN);
+		memcpy(&globals->vis_data->ifaces[iface_n].mac, i_entry->mac, ETH_ALEN);
+		memcpy(&globals->vis_data->ifaces[iface_n].name, buf, strlen(buf));
+		globals->vis_data->ifaces[iface_n].name[strlen(name)] = '\0';
 		memcpy(&globals->vis_data->ifaces[iface_n].ipv4, ipv4, 4);
 
 		iface_n++;
@@ -1001,13 +1042,13 @@ static void vis_jsondoc_interfaces(uint8
 {
 	int i;
 	static bool first_interface = true;
-
+	
 	if (first_interface)
 		first_interface = false;
 	else
 		printf(",\n");
 
-	printf("    { \"primary\" : \"%s\",\"%s\",\n", mac_to_str(ifaces[0].mac), ipv4_to_str(ifaces[0].ipv4));
+	printf("    { \"primary\" :\"%s\",\"%s\",\"%s\",\n", ifaces[0].name, mac_to_str(ifaces[0].mac), ipv4_to_str(ifaces[0].ipv4));
 	if (iface_n > 1) {
 		printf("      \"secondary\" : [ ");
 		for (i = 1; i < iface_n; i++) {
--- a/vis/vis.h
+++ b/vis/vis.h
@@ -55,6 +55,7 @@ enum vis_format {
 
 struct vis_iface {
 	uint8_t mac[ETH_ALEN];
+	uint8_t name[32];
 	uint8_t ipv4[4];
 };
 
